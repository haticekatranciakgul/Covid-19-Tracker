{"ast":null,"code":"var _jsxFileName = \"/Users/haticekatranci/Documents/Github/Covid-19-Tracker/reactdarklightmode/src/Components/DetailPage/Detail.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ColorModeContext } from \"../../theme\";\nimport { ThemeProvider, useTheme } from \"@mui/material\";\nimport numeral from \"numeral\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = countries => {\n  _s();\n  const [countryInf, setCountryInf] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const {\n    country\n  } = useParams();\n  const borders = country.map(country => country.borders);\n  useEffect(() => {\n    const getSingleCountry = async () => {\n      try {\n        const res = await fetch(`https://disease.sh/v3/covid-19/countries${country}`);\n        const data = await res.json();\n        setCountryInf(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    console.log(country);\n    getSingleCountry();\n  }, [country]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country__info__wrapper\",\n    children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading........\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 35\n    }, this), error && !isLoading && {\n      error\n    }, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-flag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-confirmed\",\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-recovered\",\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-deaths\",\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(Detail, \"ApCVSMMsVN9akvsqB01kQeYF3ys=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useContext","CssBaseline","Container","ColorModeContext","ThemeProvider","useTheme","numeral","useState","useEffect","useParams","jsxDEV","_jsxDEV","Detail","countries","_s","countryInf","setCountryInf","isLoading","setIsLoading","error","setError","country","borders","map","getSingleCountry","res","fetch","data","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","countryInfo","flag","cases","format","recovered","deaths","_c","$RefreshReg$"],"sources":["/Users/haticekatranci/Documents/Github/Covid-19-Tracker/reactdarklightmode/src/Components/DetailPage/Detail.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ColorModeContext } from \"../../theme\";\nimport { ThemeProvider, useTheme } from \"@mui/material\";\nimport numeral from \"numeral\";\nimport { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\n\n\n\n\n\nconst Detail = (countries) => {\n  const [countryInf, setCountryInf] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { country } = useParams();\n\n  const borders = country.map((country) => country.borders);\n\n  useEffect(() => {\n    const getSingleCountry = async() => {\n      try {\n          const res = await fetch(`https://disease.sh/v3/covid-19/countries${country}`)\n          const data =await res.json()\n          setCountryInf(data)\n\n      } catch (error) {\n          console.log(error)\n          \n      }\n  }\n\n      console.log(country);\n      getSingleCountry();\n  }, [country]);\n\n  return (\n      <div className=\"country__info__wrapper\">\n         \n\n          {isLoading && !error && <h4>Loading........</h4>}\n          {error && !isLoading && { error }}\n          <div className=\"info-container\">\n\t\t\t\t<div className=\"info-flag\" style={{backgroundImage: `url(${country.countryInfo.flag})`}} />\n\t\t\t\t<div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n\t\t\t\t<div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n\t\t\t\t<div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n\t\t\t\t</div>\n\t\t\n\t\t\t\n      </div>\n  );\n};\n\nexport default Detail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}