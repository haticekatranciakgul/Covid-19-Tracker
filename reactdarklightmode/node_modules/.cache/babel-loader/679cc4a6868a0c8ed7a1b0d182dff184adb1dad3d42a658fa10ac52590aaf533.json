{"ast":null,"code":"var _jsxFileName = \"/Users/haticekatranci/Documents/Github/Covid-19-Tracker/reactdarklightmode/src/Components/DetailPage/Detail.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ColorModeContext } from \"../../theme\";\nimport { ThemeProvider, useTheme } from \"@mui/material\";\nimport numeral from \"numeral\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail(countries) {\n  _s();\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n  const [countryInf, setCountryInf] = useState([]);\n  const {\n    country\n  } = useParams();\n  useEffect(() => {\n    const getSingleCountry = async () => {\n      try {\n        const res = await fetch(`https://disease.sh/v3/covid-19/countries/${country}`);\n        const data = await res.json();\n        setCountryInf(res.data.data);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getSingleCountry();\n  }, country);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Detail, \"CQYLER5VtLEaO+djWpiGs4PqAqQ=\", false, function () {\n  return [useTheme, useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useContext","CssBaseline","Container","ColorModeContext","ThemeProvider","useTheme","numeral","useState","useEffect","useParams","jsxDEV","_jsxDEV","Detail","countries","_s","theme","colorMode","countryInf","setCountryInf","country","getSingleCountry","res","fetch","data","json","console","log","error","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","_c","$RefreshReg$"],"sources":["/Users/haticekatranci/Documents/Github/Covid-19-Tracker/reactdarklightmode/src/Components/DetailPage/Detail.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ColorModeContext } from \"../../theme\";\nimport { ThemeProvider, useTheme } from \"@mui/material\";\nimport numeral from \"numeral\";\nimport { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\n\n\n\n\nfunction Detail(countries) {\n\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n\n  const [countryInf, setCountryInf] = useState([]);\n  const {country} = useParams()\n\n\n  useEffect(() => {\n    const getSingleCountry = async() => {\n        try {\n            const res = await fetch(`https://disease.sh/v3/covid-19/countries/${country}`)\n            const data =await res.json()\n            \n            setCountryInf(res.data.data)\nconsole.log(data)\n        } catch (error) {\n            console.log(error)\n            \n        }\n    }\n    getSingleCountry();\n},(country))\n\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n{/*         \n        {country.map((country) =>\n\n            <div key={country.id}>\n             {countryInf.iso2}\n         \n\n            </div>\n\n\n\n            )} */}\n\n           \n\n        </Container>\n\n    </ThemeProvider>\n</ColorModeContext.Provider>\n  )\n\n}\n\nexport default Detail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,aAAa,EAAEC,QAAQ,QAAQ,eAAe;AACvD,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK7C,SAASC,MAAMA,CAACC,SAAS,EAAE;EAAAC,EAAA;EAEzB,MAAMC,KAAK,GAAGV,QAAQ,CAAC,CAAC;EACxB,MAAMW,SAAS,GAAGhB,UAAU,CAACG,gBAAgB,CAAC;EAE9C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAACY;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAG7BD,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAW;MAChC,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,4CAA2CH,OAAQ,EAAC,CAAC;QAC9E,MAAMI,IAAI,GAAE,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAE5BN,aAAa,CAACG,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;QACxCE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACT,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAEtB;IACJ,CAAC;IACDP,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAED,OAAQ,CAAC;EAGV,oBACER,OAAA,CAACR,gBAAgB,CAACyB,QAAQ;IAACC,KAAK,EAAEb,SAAU;IAAAc,QAAA,eAC5CnB,OAAA,CAACP,aAAa;MAACW,KAAK,EAAEA,KAAM;MAAAe,QAAA,gBACxBnB,OAAA,CAACV,WAAW;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfvB,OAAA,CAACT,SAAS;QAACiC,QAAQ,EAAC;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAG5B;AAACpB,EAAA,CApDQF,MAAM;EAAA,QAECP,QAAQ,EAIJI,SAAS;AAAA;AAAA2B,EAAA,GANpBxB,MAAM;AAsDf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}